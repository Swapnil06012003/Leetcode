class Solution {
public:
    int dfs(int ind, int n, vector<int>& nums, vector<int>& dp) {
        if (ind >= n-1) return 0;
        if (dp[ind] != -1) return dp[ind];
        int mini = 1e5;
        for (int it=1; it<=nums[ind]; it++) {
            mini = min(mini, 1 + dfs(ind+it, n, nums, dp));
        }
        return dp[ind] = mini;
    }
    int jump(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n, -1);
        return dfs(0, n, nums, dp);
    }
};
