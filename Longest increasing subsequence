class Solution {
public:
    int help(int n, vector<int>& nums, int curr, int prev, vector<vector<int>>& dp){
        if(n==curr) return 0;

        if(dp[curr][prev+1]!=-1)    return dp[curr][prev+1];

        int take=0;
        if(prev==-1 || nums[curr]>nums[prev])
            take=1+help(n,nums,curr+1,curr,dp);
        
        int nottake=help(n,nums,curr+1,prev,dp);

        return dp[curr][prev+1]=max(take,nottake);
    
    }
    int lengthOfLIS(vector<int>& nums){
        vector<vector<int>> dp(nums.size(),vector<int>(nums.size()+1,-1));
        return help(nums.size(),nums,0,-1,dp);
        
    }
};
