class Solution {
public:
    int help(vector<vector<int>> &v, int i, int j, int m, int n, vector<vector<int>>& dp){
        if(v[i][j]==1)  return 0;
        if(i==m-1 && j==n-1)    return 1;
        if(dp[i][j]!=-1)    return dp[i][j];
        int paths=0;
        if(i+1<m)   paths+=help(v,i+1,j,m,n,dp);
        if(j+1<n)   paths+=help(v,i,j+1,m,n,dp);
        return dp[i][j]=paths;
    }
    int uniquePathsWithObstacles(vector<vector<int>>&  v) {
        vector<vector<int>> dp(v.size(),vector<int>(v[0].size(),-1));
        return help(v,0,0,v.size(),v[0].size(),dp);
    }
};
